import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score

# Sample data for sentiment
data = {
    'text': [
        "I love this product", 
        "This is terrible", 
        "Absolutely fantastic!", 
        "I hate it", 
        "Not good", 
        "Best ever", 
        "Awful experience", 
        "Really enjoyed it", 
        "Worst ever", 
        "Happy with the result"
    ],
    'label': [1, 0, 1, 0, 0, 1, 0, 1, 0, 1]  # 1 = positive, 0 = negative
}

df = pd.DataFrame(data)

# Split data
X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.3)

# TF-IDF Vectorization
vectorizer = TfidfVectorizer()
X_train_tfidf = vectorizer.fit_transform(X_train)
X_test_tfidf = vectorizer.transform(X_test)

# Log-linear model = Logistic Regression
model = LogisticRegression()
model.fit(X_train_tfidf, y_train)

# Predict and evaluate
y_pred = model.predict(X_test_tfidf)
accuracy = accuracy_score(y_test, y_pred)

print("Predictions:", y_pred)
print("Actual:", list(y_test))
print("âœ… Accuracy:", round(accuracy * 100, 2), "%")
